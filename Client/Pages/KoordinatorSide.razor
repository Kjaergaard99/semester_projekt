@using System;
@using System.Net;
@using semester_projekt.Shared.Models;
@using System;
@using Dapper;
@using Npgsql;
@using semester_projekt.Client.Services;
@using System.Net.Http;

@page "/koordinator"

<h3>Vagter</h3>

<div>
    <table class="vagter">
        <tr>
            <th>Vagt ID</th>
            <th>Dato</th>
            <th>Vagt start</th>
            <th>Vagt slut</th>
            <th>Pause</th>
            <th>Område</th>
            <th>Opgave ID</th> <!--Dette skal evt laves til en join m. OpgaveBeskrivelse i stedet-->
            <th>Er booket?</th>
            <th>Bruger ID</th>
        </tr>
        @foreach (var vagt in Vagter)
        {
            <tr>
                <td>@vagt.VagtId</td>
                <td>@vagt.Dato</td>
                <td>@vagt.VagtStart</td>
                <td>@vagt.VagtSlut</td>
                <td>@vagt.Pause</td>
                <td>@vagt.Område</td>
                <td>@vagt.OpgaveId</td>
                <td>@vagt.ErBooket</td>
                <td>@vagt.BrugerId</td>
            </tr>
        }
    </table>

    <table class="frivillige">
        @foreach (var bruger in Brugere)
        {
            <tr>
                <th>Bruger ID</th>
                <th>Bruger Navn</th>
                <th>Bruger Email</th>
                <th>Rolle ID</th>
            </tr>
            <tr>
                <td>@bruger.BrugerId</td>
                <td>@bruger.BrugerNavn</td>
                <td>@bruger.BrugerEmail</td>
                <td>@bruger.RolleId</td>
            </tr>
        }
    </table>


</div>



@code {
    private List<Vagt> Vagter = new List<Vagt>();
    private Vagt Vagt = new Vagt();

    private List<Bruger> Brugere = new List<Bruger>(); // definerer en ny liste af brugere
    private Bruger Bruger = new Bruger(); // definerer en ny bruger

    [Inject]
    public IKoordinatorService KoordinatorService { get; set; } // laver en instans af vores interface,
                                                                // nu kan metoderne i interfacet bruges

    protected override async Task OnInitializedAsync()
    {
        Vagter = (await KoordinatorService.GetAlleVagter()).ToList();
        Brugere = (await KoordinatorService.GetAlleFrivillige()).ToList(); // populater vores liste af brugere v hjælp af,
                                                                           // getAlleFrivillige() metoden + toList
    }


}

